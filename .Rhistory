a
a <- lm(richness.stand ~ MDFMDFDry.y, alldata_reduced)
b <- lm(richness.stand ~ MDFMDFDry.y + I(MDFMDFDry.y^2), alldata_reduced)
AICc(a,b)
richness.stand.varpart <- varpart(alldata_reduced$richness.stand,
~C_MinM.x + I(C_MinM.x^2) + HSMeanDur.x + I(HSMeanDur.x^2) + CVAnnHSMeanDur.x + M_MinM.x,
~M_MinM.y + MDFMDFDry.y + I(MDFMDFDry.y^2),
~clim_pwet + clim_tsea,
~soil_phc + soil_soc + soil_pto,
# ~exotics,
#   ~production_dryland_w + I(production_dryland_w^2),
data = alldata_reduced)
richness.stand.varpart
plot(richness.stand.varpart)
getAllStats(alldata_reduced, alldata_reduced$exotics, FD)
exotics.full.varpart <- varpart(alldata_reduced$exotics,
~ CVAnnBFI.x + I(CVAnnBFI.x^2) +
C_MaxM.x +
CVMDFDry.x + I(CVMDFDry.x^2) +
CVAnnHSMeanDur.x,
#  ~C_MinM.y,
~production_irrigated_w + I(production_irrigated_w^2)
+ production_natural_w,
#  +conservation_w + I(conservation_w^2),
~ clim_pdry + I(clim_pdry^2),
~ soil_phc + soil_der,
data = alldata_reduced)
exotics.full.varpart
plot(exotics.full.varpart)
exotics.full.varpart <- varpart(alldata_reduced$exotics,
~ CVAnnBFI.x + I(CVAnnBFI.x^2) +
C_MaxM.x +
CVMDFDry.x + I(CVMDFDry.x^2) +
CVAnnHSMeanDur.x,
~C_MinM.y,
~production_irrigated_w + I(production_irrigated_w^2)
+ production_natural_w,
#  +conservation_w + I(conservation_w^2),
~ clim_pdry + I(clim_pdry^2),
#   ~ soil_phc + soil_der,
data = alldata_reduced)
exotics.full.varpart
plot(exotics.full.varpart)
exotics.full.varpart <- varpart(alldata_reduced$exotics,
~ CVAnnBFI.x + I(CVAnnBFI.x^2) +
C_MaxM.x +
CVMDFDry.x + I(CVMDFDry.x^2) +
CVAnnHSMeanDur.x,
#  ~C_MinM.y,
~production_irrigated_w + I(production_irrigated_w^2)
+ production_natural_w,
#  +conservation_w + I(conservation_w^2),
~ clim_pdry + I(clim_pdry^2),
~ soil_phc + soil_der,
data = alldata_reduced)
exotics.full.varpart
plot(exotics.full.varpart)
exotics.full.varpart <- varpart(alldata_reduced$exotics,
~ CVAnnBFI.x + I(CVAnnBFI.x^2) +
C_MaxM.x +
CVMDFDry.x + I(CVMDFDry.x^2) +
CVAnnHSMeanDur.x,
~C_MinM.y,
~production_irrigated_w + I(production_irrigated_w^2)
+ production_natural_w,
#  +conservation_w + I(conservation_w^2),
# ~ clim_pdry + I(clim_pdry^2),
~ soil_phc + soil_der,
data = alldata_reduced)
exotics.full.varpart
plot(exotics.full.varpart)
exotics.full.varpart <- varpart(alldata_reduced$exotics,
~ CVAnnBFI.x + I(CVAnnBFI.x^2) +
C_MaxM.x +
CVMDFDry.x + I(CVMDFDry.x^2) +
CVAnnHSMeanDur.x,
#    ~C_MinM.y,
~production_irrigated_w + I(production_irrigated_w^2)
+ production_natural_w,
#  +conservation_w + I(conservation_w^2),
~ clim_pdry + I(clim_pdry^2),
~ soil_phc + soil_der,
data = alldata_reduced)
exotics.full.varpart
plot(exotics.full.varpart)
plot(FRic.SES ~ MDFMDFDry.y, alldata_reduced)
getAllStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
getAllStats(alldata_reduced, alldata_reduced$FRic.SES, FD)
FRic.SES.varpart <- varpart(alldata_reduced$FRic.SES,
~CVAnnBFI.x + I(CVAnnBFI.x^2) + HSMeanDur.x,
~soil_nto + soil_soc,
~clim_pwet,
#     ~MDFAnnHSNum.y,
data = alldata_reduced)
FRic.SES.varpart
plot(FRic.SES.varpart)
FRic.SES.varpart <- varpart(alldata_reduced$FRic.SES,
~CVAnnBFI.x + I(CVAnnBFI.x^2) + HSMeanDur.x,
~soil_nto + soil_soc,
~clim_pwet,
~MDFAnnHSNum.y,
data = alldata_reduced)
FRic.SES.varpart
plot(FRic.SES.varpart)
FRic.SES.varpart <- varpart(alldata_reduced$FRic.SES,
~CVAnnBFI.x + I(CVAnnBFI.x^2) + HSMeanDur.x,
~soil_nto + soil_soc,
~clim_pwet,
data = alldata_reduced)
FRic.SES.varpart
plot(FRic.SES.varpart)
SESFDisabunswap.varpart <- varpart(alldata_reduced$FDis.SES,
~ C_MaxM.x + I(C_MaxM.x^2),
#    ~ clim_pwet,
#   ~ MDFMDFDry.y,
~ soil_nto + I(soil_nto^2) + soil_soc + I(soil_soc^2),
data= alldata_reduced)
SESFDisabunswap.varpart
plot(SESFDisabunswap.varpart)
SESFDisabunswap.varpart <- varpart(alldata_reduced$FDis.SES,
~ C_MaxM.x + I(C_MaxM.x^2),
~ clim_pwet,
~ MDFAnnHSNum.y,
~ soil_nto + I(soil_nto^2) + soil_soc + I(soil_soc^2),
data= alldata_reduced)
SESFDisabunswap.varpart
plot(SESFDisabunswap.varpart)
SESFDisabunswap.varpart <- varpart(alldata_reduced$FDis.SES,
~ C_MaxM.x + I(C_MaxM.x^2),
~ MDFMDFDry.y,
~ clim_pwet,
~ soil_nto + I(soil_nto^2) + soil_soc + I(soil_soc^2),
data= alldata_reduced)
SESFDisabunswap.varpart
plot(SESFDisabunswap.varpart)
SESFDisabunswap.varpart <- varpart(alldata_reduced$FDis.SES,
~ C_MaxM.x + I(C_MaxM.x^2),
~ clim_pwet,
~ soil_nto + I(soil_nto^2) + soil_soc + I(soil_soc^2),
data= alldata_reduced)
SESFDisabunswap.varpart
plot(SESFDisabunswap.varpart)
FRic.SES.varpart <- varpart(alldata_reduced$FRic.SES,
~CVAnnBFI.x + I(CVAnnBFI.x^2) + HSMeanDur.x,
~clim_pwet,
~soil_nto + soil_soc,
data = alldata_reduced)
FRic.SES.varpart
plot(FRic.SES.varpart)
svg("output/spRichness_varpart.svg", width = 6.4, height = 3, pointsize=8)
plot(richness.stand.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','flow mod.','climate', 'soil'), id.size = 1, alpha = 130)
dev.off()
svg("output/exotics_varpart.svg", width = 6.4, height = 3, pointsize=8)
plot(exotics.full.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','land use','climate','soil'), id.size = 1, alpha = 130)
dev.off()
svg("output/FDisSES_varpart.svg", width = 6.4, height = 3, pointsize=8)
plot(SESFDisabunswap.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology', 'flow mod.', 'climate','soil'), id.size =1, alpha = 130)
dev.off()
svg("output/FRicSES_varpart.svg", width = 6.4, height = 3, pointsize=8)
plot(FRic.SES.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','flow mod.','climate','soil'), id.size = 1, alpha = 130)
dev.off()
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD/scripts/functions.R')
plot.quad(alldata_reduced, alldata_reduced$richness.stand)
plot.linear(alldata_reduced, alldata_reduced$richness.stand)
summary(lm(richness.stand ~ MDFMDFDry.y, alldata_reduced))
summary(lm(richness.stand ~ MDFMDFDry.y + I(MDFMDFDry.y^2), alldata_reduced))
FRic.SES.varpart <- varpart(alldata_reduced$FRic.SES,
~CVAnnBFI.x + I(CVAnnBFI.x^2) + HSMeanDur.x,
~clim_pwet,
~soil_nto + soil_soc,
data = alldata_reduced)
FRic.SES.varpart
plot(FRic.SES.varpart)
svg("output/FDisSES_varpart.svg", width = 6.4, height = 3, pointsize=8)
plot(SESFDisabunswap.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology', 'climate','soil'), id.size =1, alpha = 130)
dev.off()
svg("output/FRicSES_varpart.svg", width = 6.4, height = 3, pointsize=8)
plot(FRic.SES.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','climate','soil'), id.size = 1, alpha = 130)
dev.off()
richness.stand.varpart <- varpart(alldata_reduced$richness.stand,
~C_MinM.x + I(C_MinM.x^2) + HSMeanDur.x + I(HSMeanDur.x^2) + CVAnnHSMeanDur.x + M_MinM.x,
~M_MinM.y + MDFMDFDry.y + I(MDFMDFDry.y^2),
~clim_pwet + clim_tsea,
~soil_phc + soil_soc + soil_pto,
# ~exotics,
#   ~production_dryland_w + I(production_dryland_w^2),
data = alldata_reduced)
richness.stand.varpart
plot(richness.stand.varpart)
richness.stand.varpart <- varpart(alldata_reduced$richness.stand,
~C_MinM.x + I(C_MinM.x^2) + HSMeanDur.x + I(HSMeanDur.x^2) + CVAnnHSMeanDur.x + M_MinM.x,
~M_MinM.y + MDFMDFDry.y + I(MDFMDFDry.y^2),
~clim_pwet + clim_tsea,
~soil_phc + soil_soc + soil_pto,
# ~exotics,
#   ~production_dryland_w + I(production_dryland_w^2),
data = alldata_reduced)
richness.stand.varpart
plot(richness.stand.varpart)
richness.stand.varpart <- varpart(alldata_reduced$richness.stand,
~C_MinM.x + I(C_MinM.x^2) + HSMeanDur.x + I(HSMeanDur.x^2) + CVAnnHSMeanDur.x + M_MinM.x,
~M_MinM.y + MDFMDFDry.y,
~clim_pwet + clim_tsea,
~soil_phc + soil_soc + soil_pto,
# ~exotics,
#   ~production_dryland_w + I(production_dryland_w^2),
data = alldata_reduced)
richness.stand.varpart
plot(richness.stand.varpart)
plot(richness.stand.varpart)
svg("output/spRichness_varpart.svg", width = 6.4, height = 3, pointsize=8)
plot(richness.stand.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','flow mod.','climate', 'soil'), id.size = 1, alpha = 130)
dev.off()
summary(lm(richness.stand ~ MDFMDFDry.y, alldata_reduced))
rm(nullFD.abunshuffle)
str(alldata_reduced)
clim.pca <- prcomp(alldata[,2:20], center=TRUE, scale=TRUE)
clim.pca
summary(clim.pca)
imputed
alldata_reduced
alldata_reduced[,20]
alldata_reduced[20,]
alldata_reduced[,20]
alldata_reduced[,20:24]
alldata_reduced[,15:24]
alldata_reduced[,14:28]
alldata_reduced[,14:32]
alldata_reduced[,14:31]
str(alldata_reduced[,14:31])
hydro.pca <- pca(alldata_reduced[,14:31], centre=TRUE, retx = TRUE, scale=TRUE)
hydro.pca <- prcomp(alldata_reduced[,14:31], centre=TRUE, retx = TRUE, scale=TRUE)
hydro.pca
summary(hydro.pca)
hydro.pca$rotation
hydro.pca$rotation[,1:5]
write.csv(hydro.pca$rotation[,1:5], "output/hydropcaloadings.csv")
str(alltraits)
alltraits[,1:6]
mean(alltraits[,1])
sd(alltraits[,1])
mean(alltraits[,2])
alltraits <- read.csv("data/alltraits.csv", header=T)
source("scripts/functions.R")
#source("scripts/trait_cleaning.R")
library(plyr)
library(reshape2)
library(reshape)
library(FD)
library(ggplot2)
library(missForest)
library(mice)
library(SYNCSA)
library(fossil)
alltraits <- read.csv("data/alltraits.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
vegSurveys <- read.csv("data/vegSurveys.csv", header=T)
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
source_GF <- read.csv("data/source_growthForm1.csv", header=T)
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
source <- data.frame(cbind(alltraits["source"], alltraits["Taxon"]))
#alltraits <- subset(alltraits, source != "exotic")
alltraits$X <- NULL
alltraits <- missing(alltraits)
alltraits.discarded <- subset(alltraits, missing >=3)
alltraits <- subset(alltraits, missing <3) # only keep species with less than X NA trait values
alltraits <- rbind(alltraits, alltraits.discarded[46,])
#  alltraits <- alltraits[-57,]
#  alltraits <- alltraits[-12,]
alltraits$missing <- NULL
# normalise data
#alltraits$SLA <- log10(alltraits$SLA)
#alltraits$leaf.area <- sqrt(alltraits$leaf.area)
#alltraits$seed.mass <- log10(alltraits$seed.mass)
#alltraits$flowering.duration <- sqrt(alltraits$flowering.duration)
#alltraits$maximum.height <- sqrt(alltraits$maximum.height)
#alltraits$leaf.narrowness <- log10(alltraits$leaf.narrowness)
# impute missing data using missForests
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
source("scripts/functions.R")
#source("scripts/trait_cleaning.R")
library(plyr)
library(reshape2)
library(reshape)
library(FD)
library(ggplot2)
library(missForest)
library(mice)
library(SYNCSA)
library(fossil)
alltraits <- read.csv("data/alltraits.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
vegSurveys <- read.csv("data/vegSurveys.csv", header=T)
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
source_GF <- read.csv("data/source_growthForm1.csv", header=T)
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
source <- data.frame(cbind(alltraits["source"], alltraits["Taxon"]))
#alltraits <- subset(alltraits, source != "exotic")
alltraits$X <- NULL
alltraits <- missing(alltraits)
alltraits.discarded <- subset(alltraits, missing >=3)
alltraits <- subset(alltraits, missing <3) # only keep species with less than X NA trait values
alltraits <- rbind(alltraits, alltraits.discarded[46,])
#  alltraits <- alltraits[-57,]
#  alltraits <- alltraits[-12,]
alltraits$missing <- NULL
# normalise data
#alltraits$SLA <- log10(alltraits$SLA)
#alltraits$leaf.area <- sqrt(alltraits$leaf.area)
#alltraits$seed.mass <- log10(alltraits$seed.mass)
#alltraits$flowering.duration <- sqrt(alltraits$flowering.duration)
#alltraits$maximum.height <- sqrt(alltraits$maximum.height)
#alltraits$leaf.narrowness <- log10(alltraits$leaf.narrowness)
# impute missing data using missForests
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
alltraits.imputed <- data.frame(cbind(alltraits[1], as.data.frame(imputed[1])))
colnames(alltraits.imputed) <- c("Taxon",
"flowering.duration",
"leaf.area",
#                         "leaf.narrowness",
"maximum.height",
"seed.mass",
"SLA",
"wood.density",
"growthForm")
alltraits.imputed$wood.density <- alltraits$wood.density
#  alltraits.imputed$leaf.area <- alltraits$leaf.area
#  alltraits.imputed$seed.mass <- alltraits$seed.mass
#  alltraits.imputed$maximum.height <- alltraits$maximum.height
alltraits.imputed$growthForm <- alltraits$growthForm
alltraits.orig <- alltraits
# alltraits <- alltraits.imputed
alltraits <- merge(alltraits, source, all.x=TRUE)
# wide > long format
vegSurveys <- melt(vegSurveys, id.vars = c("site", "transect", "transect.area"))
colnames(vegSurveys)[4] <- c("Taxon")
colnames(vegSurveys)[5] <- c("count")
vegSurveys$Taxon <- as.factor(trim(vegSurveys$Taxon)) # trim white spaces
levels(vegSurveys$Taxon) <- capitalise(levels(vegSurveys$Taxon)) # make sure spp names are properly capitalised
# find unmodified species richness, area standardised spp. richness, chao estimated and area standardised spp. richness
#richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
#richness$sum[richness$sum>0] <- 1 # convert counts to presabs
#richness <- ddply(richness, .(site), summarise, richness = sum(sum))
transectArea <- ddply(vegSurveys, .(site), summarise, transectArea = sum(unique((transect.area))))
richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
richness$sum[richness$sum>0] <- 1 # convert counts to presabs
richness <- ddply(richness, .(site), summarise, richness = sum(sum))
richness$transectArea <- transectArea$transectArea
richness$richness.stand <- richness$richness / richness$transectArea
vegSurveysx <- read.csv("data/vegSurveys.csv", header=T)
rich.estimated <- rich.est(vegSurveysx)
richness$richness.stand.chao <- rich.estimated$chao / richness$transectArea
richness$richness.stand.ACE <- rich.estimated$ACE / richness$transectArea
richness$richness.stand.boot <- rich.estimated$bootstrap / richness$transectArea
richness$richness.stand.jack <- rich.estimated$jacknife / richness$transectArea
# include only species with more than X occurrences at any site
#vegSurveys$site <- as.factor(vegSurveys$site)
#abundance <- ddply(vegSurveys, .(Taxon, site), summarise, countSum = sum(count))
#vegSurveys.short <- ddply(abundance,  .(Taxon), summarise, maxCount = max(countSum))
#vegSurveys.short <- subset(vegSurveys.short, maxCount > 1) # insert X here
#vegSurveys <- vegSurveys[vegSurveys$Taxon %in% vegSurveys.short$Taxon, ]
# convert transect counts -> site avg # per hectare
vegSurveys$perHa <- vegSurveys$count * 10000 / vegSurveys$transect.area
vegSurveys <- ddply(vegSurveys, .(site, Taxon), summarise, avgPerHa = mean(perHa))
vegSurveys_all <- vegSurveys
# find total cover in stems/Ha for each site
vegSurveys.totalcover <- ddply(vegSurveys, .(site), summarise, totalcover = sum(avgPerHa, na.rm=TRUE))
vegSurveys <- merge(vegSurveys, vegSurveys.totalcover)
vegSurveys <- merge(vegSurveys, alltraits)
vegSurveys <- vegSurveys[order(vegSurveys$site),]
# get only traits for species which are present in surveys (kind of circular code here, as this is also done for vegSurveys above)
alltraits <- vegSurveys[!duplicated(vegSurveys[,c("Taxon")]),]
alltraits <- data.frame(cbind(alltraits["Taxon"],alltraits[,5:11]))
# find proportional abundance of exotics spp.
vegSurveys.ex <- subset(vegSurveys, source == "exotic")
exotics <- ddply(vegSurveys.ex, .(site), summarise, proportionExotic = sum(avgPerHa) / totalcover)
exotics <- unique(exotics)
hydrosites$exotics <- exotics$proportionExotic
write.csv(vegSurveys.ex1, "output/vegSurveysex.csv")
vegSurveys.ex1 <- vegSurveys.ex
vegSurveys.ex1$avgPerHa[vegSurveys.ex1$avgPerHa>0] <- 1 # convert counts to presabs
exotics1 <- ddply(vegSurveys.ex1, .(site), summarise, exoticRich = sum(avgPerHa))
# find proportion of cover for which trait data is available
vegSurveys.representedcover  <- merge(ddply(vegSurveys, .(site), summarise, representedcover = sum(avgPerHa, na.rm=TRUE)),
vegSurveys.totalcover)
vegSurveys.representedcover$proportion <- vegSurveys.representedcover$representedcover / vegSurveys.representedcover$totalcover
### data density ####
data.density <- data.frame(cbind(
c("wood.density", "maximum.height", "seed.mass", "SLA", "flowering.duration", "leaf.area"),
c(
length(na.omit(alltraits.orig$wood.density)) / length(alltraits.orig$wood.density),
length(na.omit(alltraits.orig$maximum.height)) / length(alltraits.orig$maximum.height),
length(na.omit(alltraits.orig$seed.mass)) / length(alltraits.orig$seed.mass),
length(na.omit(alltraits.orig$SLA)) / length(alltraits.orig$SLA),
length(na.omit(alltraits.orig$flowering.duration)) / length(alltraits.orig$flowering.duration),
length(na.omit(alltraits.orig$leaf.area)) / length(alltraits.orig$leaf.area))))
colnames(data.density) <- c("trait", "data density")
# transform abundance data
#vegSurveys$avgPerHa <- sqrt(vegSurveys$avgPerHa)
# transform avgPerHa into relative abundance
vegSurveys$relabun <- vegSurveys$avgPerHa / vegSurveys$totalcover
abun <- cast(vegSurveys, site ~ Taxon, value="avgPerHa", fill=0)
#abun <- cast(vegSurveys, site ~ Taxon, value="relabun", fill=0)
#abun <- round(abun)
abun <- abun[order(abun$site),]
#abun <- abun[-46,]
abun$site <- NULL
abun <- data.frame(abun)
abun.ord <- abun[,order(names(abun))]
Taxon <- alltraits$Taxon
alltraits$Taxon <- NULL
rownames(alltraits) <- Taxon # dbFD requires this format
rm(Taxon)
mean(alltraits[,1])
mean(na.omit(alltraits[,1]))
na.omit(alltraits[,1])
na.omit(alltraits[,2])
mean(na.omit(alltraits[,2]))
mean(na.omit(alltraits[,2]))
sd(na.omit(alltraits[,2]))
mean(na.omit(alltraits[,3]))
sd(na.omit(alltraits[,3]))
mean(na.omit(alltraits[,4]))
sd(na.omit(alltraits[,4]))
mean(na.omit(alltraits[,5]))
sd(na.omit(alltraits[,5]))
mean(na.omit(alltraits[,6]))
sd(na.omit(alltraits[,6]))
mean(na.omit(alltraits[,7]))
sd(na.omit(alltraits[,7]))
str(alltraits)
str(subset(alltraits, source == "exotics"))
str(subset(alltraits, source == "exotic"))
str(subset(alltraits, source == "native"))
mean(na.omit(alltraits[,2])) # flowering
sd(na.omit(alltraits[,2]))
mean(na.omit(alltraits[,3])) # leaf area
sd(na.omit(alltraits[,3]))
mean(na.omit(alltraits[,4])) # maxheight
sd(na.omit(alltraits[,4]))
sd(na.omit(alltraits[,5]))
mean(na.omit(alltraits[,5])) # seed mass
mean(na.omit(alltraits[,6])) # SLA
sd(na.omit(alltraits[,6]))
mean(na.omit(alltraits[,2])) # flowering
sd(na.omit(alltraits[,2]))
mean(na.omit(alltraits[,3])) # leaf area
sd(na.omit(alltraits[,3]))
mean(na.omit(alltraits[,4])) # maxheight
sd(na.omit(alltraits[,4]))
mean(na.omit(alltraits[,5])) # seed mass
sd(na.omit(alltraits[,5]))
mean(na.omit(alltraits[,6])) # SLA
sd(na.omit(alltraits[,6]))
mean(na.omit(alltraits[,7])) # wood density
sd(na.omit(alltraits[,7]))
vegSurveys.representedcover
data.density
write.csv(data.density, "output/datadensity1.csv")
write.csv(vegSurveys.representedcover, "output/repcover.csv")
alldata_reduced$site
write.csv(alldata_reduced$site, "output/sitesnaomit.csv")
alldata_reduced$sites
alldata1.naomit$sites
alldata1.naomit$site
alldata_reduced$site
plot(exotics ~ C_MinM, alldata_reduced)
plot(exotics ~ C_MinM.x, alldata_reduced)
plot(exotics ~ C_MinM.y, alldata_reduced)
summary(lm(exotics ~ CVAnnBFI.x * production_natural_w, alldata_reduced))
summary(lm(exotics ~ CVAnnBFI.x + I(CVAnnBFI.x^2) +  production_natural_w + CVAnnBFI.x:production_natural_w, alldata_reduced))
alldata_reduced
?tiff
richness.stand.varpart
plot(richness.stand.varpart)
require(vegan)
richness.stand.varpart
plot(richness.stand.varpart)
tiff("output/spRichness_varpart.tiff", units = "in", width = 6.4, height = 3, pointsize=8)
plot(richness.stand.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','flow mod.','climate', 'soil'), id.size = 1, alpha = 130)
dev.off()
tiff("output/spRichness_varpart.tiff", units = "in", res = "900", width = 6.4, height = 3, pointsize=8)
plot(richness.stand.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','flow mod.','climate', 'soil'), id.size = 1, alpha = 130)
dev.off()
tiff("output/spRichness_varpart.tiff", units = "in", res = 900, width = 6.4, height = 3, pointsize=8)
plot(richness.stand.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','flow mod.','climate', 'soil'), id.size = 1, alpha = 130)
dev.off()
tiff("output/figures/spRichness_varpart.tiff", units = "in", res = 900, width = 6.4, height = 3, pointsize=8)
plot(richness.stand.varpart, bg = c(gray(0.7,1)), Xnames= c('hydrology','flow mod.','climate', 'soil'), id.size = 1, alpha = 130)
dev.off()
alldata_reduced <- read.csv("data/alldata_reduced2.csv", header=T)
plot.linear(alldata_reduced, alldata_reduced$richness.stand)
require(ggplot2)
require(ggplot2)
plot.linear(alldata_reduced, alldata_reduced$richness.stand)
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD_fixed/scripts/functions.R')
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD_fixed/scripts/functions.R')
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD_fixed/scripts/functions.R')
plot.quad(alldata_reduced, alldata_reduced$richness.stand)
plot.linear(alldata_reduced, alldata_reduced$richness.stand)
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD_fixed/scripts/functions.R')
plot.linear(alldata_reduced, alldata_reduced$richness.stand)
plot.quad(alldata_reduced, alldata_reduced$richness.stand)
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD_fixed/scripts/functions.R')
plot.quad(alldata_reduced, alldata_reduced$FRic.SES)
plot.linear(alldata_reduced, alldata_reduced$FRic.SES)
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD_fixed/scripts/functions.R')
plot.quad(alldata_reduced, alldata_reduced$FDis.SES)
plot.linear(alldata_reduced, alldata_reduced$FDis.SES)
source('C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD_fixed/scripts/functions.R')
plot.quad(alldata_reduced, alldata_reduced$exotics)
plot.linear(alldata_reduced, alldata_reduced$exotics)
