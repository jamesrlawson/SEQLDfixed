#  alltraits <- alltraits[-57,]
#  alltraits <- alltraits[-12,]
alltraits$missing <- NULL
alltraits$SLA <- log10(alltraits$SLA)
alltraits$leaf.area <- sqrt(alltraits$leaf.area)
alltraits$seed.mass <- log10(alltraits$seed.mass)
alltraits$flowering.duration <- sqrt(alltraits$flowering.duration)
alltraits$maximum.height <- sqrt(alltraits$maximum.height)
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
alltraits.imputed <- data.frame(cbind(alltraits[1], as.data.frame(imputed[1])))
colnames(alltraits.imputed) <- c("Taxon",
"flowering.duration",
"leaf.area",
#                         "leaf.narrowness",
"maximum.height",
"seed.mass",
"SLA",
"wood.density",
"growthForm")
# first manuscript version
#  alltraits.imputed$wood.density <- alltraits$wood.density
##  alltraits.imputed$leaf.area <- alltraits$leaf.area
##  alltraits.imputed$seed.mass <- alltraits$seed.mass
##  alltraits.imputed$maximum.height <- alltraits$maximum.height
#  alltraits.imputed$growthForm <- alltraits$growthForm
# first review version, using results from imputation_crossval.R
#  #  alltraits.imputed$wood.density <- alltraits$wood.density
#    alltraits.imputed$leaf.area <- alltraits$leaf.area
#    alltraits.imputed$seed.mass <- alltraits$seed.mass
#  #  alltraits.imputed$maximum.height <- alltraits$maximum.height
#    alltraits.imputed$growthForm <- alltraits$growthForm
#    alltraits.imputed$flowering.duration <- alltraits$flowering.duration
#  #  alltraits.imputed$SLA <- alltraits$SLA
# no imputed values
alltraits.imputed$wood.density <- alltraits$wood.density
alltraits.imputed$leaf.area <- alltraits$leaf.area
alltraits.imputed$seed.mass <- alltraits$seed.mass
alltraits.imputed$maximum.height <- alltraits$maximum.height
alltraits.imputed$growthForm <- alltraits$growthForm
alltraits.imputed$flowering.duration <- alltraits$flowering.duration
alltraits.imputed$SLA <- alltraits$SLA
alltraits.orig <- alltraits
alltraits <- alltraits.imputed
alltraits <- merge(alltraits, source, all.x=TRUE)
vegSurveys <- melt(vegSurveys, id.vars = c("site", "transect", "transect.area"))
colnames(vegSurveys)[4] <- c("Taxon")
colnames(vegSurveys)[5] <- c("count")
vegSurveys$Taxon <- as.factor(trim(vegSurveys$Taxon)) # trim white spaces
levels(vegSurveys$Taxon) <- capitalise(levels(vegSurveys$Taxon)) # make sure spp names are properly capitalised
# find unmodified species richness, area standardised spp. richness, chao estimated and area standardised spp. richness
transectArea <- ddply(vegSurveys, .(site), summarise, transectArea = sum(unique((transect.area))))
richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
richness$sum[richness$sum>0] <- 1 # convert counts to presabs
richness <- ddply(richness, .(site), summarise, richness = sum(sum))
richness$transectArea <- transectArea$transectArea
richness$transectArea.ln <- log(richness$transectArea)
richness$richness.stand <- richness$richness / richness$transectArea
richness$richness.stand.ln <- richness$richness / richness$transectArea.ln
vegSurveysx <- read.csv("data/vegSurveys.csv", header=T)
rich.estimated <- rich.est(vegSurveysx)
richness$richness.stand.chao <- rich.estimated$chao / richness$transectArea
richness$richness.stand.ACE <- rich.estimated$ACE / richness$transectArea
richness$richness.stand.boot <- rich.estimated$bootstrap / richness$transectArea
richness$richness.stand.jack <- rich.estimated$jacknife / richness$transectArea
vegSurveys$perHa <- vegSurveys$count * 10000 / vegSurveys$transect.area
vegSurveys <- ddply(vegSurveys, .(site, Taxon), summarise, avgPerHa = mean(perHa))
vegSurveys_all <- vegSurveys
# find total cover in stems/Ha for each site
vegSurveys.totalcover <- ddply(vegSurveys, .(site), summarise, totalcover = sum(avgPerHa, na.rm=TRUE))
vegSurveys <- merge(vegSurveys, vegSurveys.totalcover)
vegSurveys <- merge(vegSurveys, alltraits)
vegSurveys <- vegSurveys[order(vegSurveys$site),]
# get only traits for species which are present in surveys (kind of circular code here, as this is also done for vegSurveys above)
alltraits <- vegSurveys[!duplicated(vegSurveys[,c("Taxon")]),]
alltraits <- data.frame(cbind(alltraits["Taxon"],alltraits[,5:11]))
vegSurveys.ex <- subset(vegSurveys, source == "exotic")
exotics <- ddply(vegSurveys.ex, .(site), summarise, proportionExotic = sum(avgPerHa) / totalcover)
exotics <- unique(exotics)
hydrosites$exotics <- exotics$proportionExotic
vegSurveys.ex1 <- vegSurveys.ex
vegSurveys.ex1$avgPerHa[vegSurveys.ex1$avgPerHa>0] <- 1 # convert counts to presabs
exotics1 <- ddply(vegSurveys.ex1, .(site), summarise, exoticRich = sum(avgPerHa))
richness$exoticRich <- exotics1$exoticRich
richness$exoticRich.ln <- richness$exoticRich / richness$transectArea.ln
vegSurveys.representedcover  <- merge(ddply(vegSurveys, .(site), summarise, representedcover = sum(avgPerHa, na.rm=TRUE)),
vegSurveys.totalcover)
vegSurveys.representedcover$proportion <- vegSurveys.representedcover$representedcover / vegSurveys.representedcover$totalcover
data.density <- data.frame(cbind(
c("wood.density", "maximum.height", "seed.mass", "SLA", "flowering.duration", "leaf.area"),
c(
length(na.omit(alltraits.orig$wood.density)) / length(alltraits.orig$wood.density),
length(na.omit(alltraits.orig$maximum.height)) / length(alltraits.orig$maximum.height),
length(na.omit(alltraits.orig$seed.mass)) / length(alltraits.orig$seed.mass),
length(na.omit(alltraits.orig$SLA)) / length(alltraits.orig$SLA),
length(na.omit(alltraits.orig$flowering.duration)) / length(alltraits.orig$flowering.duration),
length(na.omit(alltraits.orig$leaf.area)) / length(alltraits.orig$leaf.area))))
colnames(data.density) <- c("trait", "data density")
vegSurveys$relabun <- vegSurveys$avgPerHa / vegSurveys$totalcover
abun <- cast(vegSurveys, site ~ Taxon, value="avgPerHa", fill=0)
abun <- cast(vegSurveys, site ~ Taxon, value="relabun", fill=0)
abun <- abun[order(abun$site),]
#abun <- abun[-46,]
abun$site <- NULL
abun <- data.frame(abun)
abun.ord <- abun[,order(names(abun))]
Taxon <- alltraits$Taxon
alltraits$Taxon <- NULL
rownames(alltraits) <- Taxon # dbFD requires this format
rm(Taxon)
FD <- dbFD(alltraits,
abun.ord,
w.abun = TRUE,
stand.x = TRUE,
corr = c("cailliez"),
#         calc.FGR = TRUE,
#         clust.type = c("kmeans"),
#        km.inf.gr = c(2),
#        km.sup.gr = c(10),
#        km.iter = (100),
calc.FDiv = TRUE,
calc.FRic = TRUE,
m = "max",
calc.CWM=TRUE,
print.pco=TRUE,
#                      scale.RaoQ=TRUE,
stand.FRic=TRUE
)
source("scripts/functions.R")
#source("scripts/trait_cleaning.R")
library(plyr)
library(reshape2)
library(reshape)
library(FD)
library(ggplot2)
library(missForest)
library(mice)
library(SYNCSA)
library(fossil)
alltraits <- read.csv("data/alltraits.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
vegSurveys <- read.csv("data/vegSurveys.csv", header=T)
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
source_GF <- read.csv("data/source_growthForm1.csv", header=T)
alltraits <- merge(alltraits, source_GF, all.x=TRUE)
source <- data.frame(cbind(alltraits["source"], alltraits["Taxon"]))
#alltraits <- subset(alltraits, source != "exotic")
alltraits$X <- NULL
alltraits <- missing(alltraits)
alltraits.discarded <- subset(alltraits, missing >=3)
alltraits <- subset(alltraits, missing <3) # only keep species with less than X NA trait values
alltraits <- rbind(alltraits, alltraits.discarded[46,])
#  alltraits <- alltraits[-57,]
#  alltraits <- alltraits[-12,]
alltraits$missing <- NULL
# normalise data
alltraits$SLA <- log10(alltraits$SLA)
alltraits$leaf.area <- sqrt(alltraits$leaf.area)
alltraits$seed.mass <- log10(alltraits$seed.mass)
alltraits$flowering.duration <- sqrt(alltraits$flowering.duration)
alltraits$maximum.height <- sqrt(alltraits$maximum.height)
# impute missing data using missForests
imputed <- missForest(alltraits[,2:8], maxiter = 100, ntree= 1000, verbose =TRUE, replace=TRUE, variablewise=TRUE)
alltraits.imputed <- data.frame(cbind(alltraits[1], as.data.frame(imputed[1])))
colnames(alltraits.imputed) <- c("Taxon",
"flowering.duration",
"leaf.area",
#                         "leaf.narrowness",
"maximum.height",
"seed.mass",
"SLA",
"wood.density",
"growthForm")
# first manuscript version
#  alltraits.imputed$wood.density <- alltraits$wood.density
##  alltraits.imputed$leaf.area <- alltraits$leaf.area
##  alltraits.imputed$seed.mass <- alltraits$seed.mass
##  alltraits.imputed$maximum.height <- alltraits$maximum.height
#  alltraits.imputed$growthForm <- alltraits$growthForm
# first review version, using results from imputation_crossval.R
#  #  alltraits.imputed$wood.density <- alltraits$wood.density
#    alltraits.imputed$leaf.area <- alltraits$leaf.area
#    alltraits.imputed$seed.mass <- alltraits$seed.mass
#  #  alltraits.imputed$maximum.height <- alltraits$maximum.height
#    alltraits.imputed$growthForm <- alltraits$growthForm
#    alltraits.imputed$flowering.duration <- alltraits$flowering.duration
#  #  alltraits.imputed$SLA <- alltraits$SLA
# no imputed values
alltraits.imputed$wood.density <- alltraits$wood.density
alltraits.imputed$leaf.area <- alltraits$leaf.area
alltraits.imputed$seed.mass <- alltraits$seed.mass
alltraits.imputed$maximum.height <- alltraits$maximum.height
alltraits.imputed$growthForm <- alltraits$growthForm
alltraits.imputed$flowering.duration <- alltraits$flowering.duration
alltraits.imputed$SLA <- alltraits$SLA
alltraits.orig <- alltraits
alltraits <- alltraits.imputed
alltraits <- merge(alltraits, source, all.x=TRUE)
# wide > long format
vegSurveys <- melt(vegSurveys, id.vars = c("site", "transect", "transect.area"))
colnames(vegSurveys)[4] <- c("Taxon")
colnames(vegSurveys)[5] <- c("count")
vegSurveys$Taxon <- as.factor(trim(vegSurveys$Taxon)) # trim white spaces
levels(vegSurveys$Taxon) <- capitalise(levels(vegSurveys$Taxon)) # make sure spp names are properly capitalised
# find unmodified species richness, area standardised spp. richness, chao estimated and area standardised spp. richness
#richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
#richness$sum[richness$sum>0] <- 1 # convert counts to presabs
#richness <- ddply(richness, .(site), summarise, richness = sum(sum))
transectArea <- ddply(vegSurveys, .(site), summarise, transectArea = sum(unique((transect.area))))
richness <- ddply(vegSurveys, .(site, Taxon), summarise, sum = sum(count))
richness$sum[richness$sum>0] <- 1 # convert counts to presabs
richness <- ddply(richness, .(site), summarise, richness = sum(sum))
richness$transectArea <- transectArea$transectArea
richness$transectArea.ln <- log(richness$transectArea)
richness$richness.stand <- richness$richness / richness$transectArea
richness$richness.stand.ln <- richness$richness / richness$transectArea.ln
vegSurveysx <- read.csv("data/vegSurveys.csv", header=T)
rich.estimated <- rich.est(vegSurveysx)
richness$richness.stand.chao <- rich.estimated$chao / richness$transectArea
richness$richness.stand.ACE <- rich.estimated$ACE / richness$transectArea
richness$richness.stand.boot <- rich.estimated$bootstrap / richness$transectArea
richness$richness.stand.jack <- rich.estimated$jacknife / richness$transectArea
# include only species with more than X occurrences at any site
#vegSurveys$site <- as.factor(vegSurveys$site)
#abundance <- ddply(vegSurveys, .(Taxon, site), summarise, countSum = sum(count))
#vegSurveys.short <- ddply(abundance,  .(Taxon), summarise, maxCount = max(countSum))
#vegSurveys.short <- subset(vegSurveys.short, maxCount > 1) # insert X here
#vegSurveys <- vegSurveys[vegSurveys$Taxon %in% vegSurveys.short$Taxon, ]
# convert transect counts -> site avg # per hectare
vegSurveys$perHa <- vegSurveys$count * 10000 / vegSurveys$transect.area
vegSurveys <- ddply(vegSurveys, .(site, Taxon), summarise, avgPerHa = mean(perHa))
vegSurveys_all <- vegSurveys
# find total cover in stems/Ha for each site
vegSurveys.totalcover <- ddply(vegSurveys, .(site), summarise, totalcover = sum(avgPerHa, na.rm=TRUE))
vegSurveys <- merge(vegSurveys, vegSurveys.totalcover)
vegSurveys <- merge(vegSurveys, alltraits)
vegSurveys <- vegSurveys[order(vegSurveys$site),]
# get only traits for species which are present in surveys (kind of circular code here, as this is also done for vegSurveys above)
alltraits <- vegSurveys[!duplicated(vegSurveys[,c("Taxon")]),]
alltraits <- data.frame(cbind(alltraits["Taxon"],alltraits[,5:11]))
# find proportional abundance of exotics spp.
vegSurveys.ex <- subset(vegSurveys, source == "exotic")
exotics <- ddply(vegSurveys.ex, .(site), summarise, proportionExotic = sum(avgPerHa) / totalcover)
exotics <- unique(exotics)
#hydrosites$exotics <- exotics$proportionExotic
vegSurveys.ex1 <- vegSurveys.ex
vegSurveys.ex1$avgPerHa[vegSurveys.ex1$avgPerHa>0] <- 1 # convert counts to presabs
exotics1 <- ddply(vegSurveys.ex1, .(site), summarise, exoticRich = sum(avgPerHa))
richness$exoticRich <- exotics1$exoticRich
richness$exoticRich.ln <- richness$exoticRich / richness$transectArea.ln
# find proportion of cover for which trait data is available
vegSurveys.representedcover  <- merge(ddply(vegSurveys, .(site), summarise, representedcover = sum(avgPerHa, na.rm=TRUE)),
vegSurveys.totalcover)
vegSurveys.representedcover$proportion <- vegSurveys.representedcover$representedcover / vegSurveys.representedcover$totalcover
### data density ####
data.density <- data.frame(cbind(
c("wood.density", "maximum.height", "seed.mass", "SLA", "flowering.duration", "leaf.area"),
c(
length(na.omit(alltraits.orig$wood.density)) / length(alltraits.orig$wood.density),
length(na.omit(alltraits.orig$maximum.height)) / length(alltraits.orig$maximum.height),
length(na.omit(alltraits.orig$seed.mass)) / length(alltraits.orig$seed.mass),
length(na.omit(alltraits.orig$SLA)) / length(alltraits.orig$SLA),
length(na.omit(alltraits.orig$flowering.duration)) / length(alltraits.orig$flowering.duration),
length(na.omit(alltraits.orig$leaf.area)) / length(alltraits.orig$leaf.area))))
colnames(data.density) <- c("trait", "data density")
# transform abundance data
#vegSurveys$avgPerHa <- sqrt(vegSurveys$avgPerHa)
# transform avgPerHa into relative abundance
vegSurveys$relabun <- vegSurveys$avgPerHa / vegSurveys$totalcover
#abun <- cast(vegSurveys, site ~ Taxon, value="avgPerHa", fill=0)
abun <- cast(vegSurveys, site ~ Taxon, value="relabun", fill=0)
#abun <- round(abun)
abun <- abun[order(abun$site),]
#abun <- abun[-46,]
abun$site <- NULL
abun <- data.frame(abun)
abun.ord <- abun[,order(names(abun))]
Taxon <- alltraits$Taxon
alltraits$Taxon <- NULL
rownames(alltraits) <- Taxon # dbFD requires this format
rm(Taxon)
#write.csv(alltraits, "output/alltraits_max2.csv")
# calculate FD
FD <- dbFD(alltraits,
abun.ord,
w.abun = TRUE,
stand.x = TRUE,
corr = c("cailliez"),
#         calc.FGR = TRUE,
#         clust.type = c("kmeans"),
#        km.inf.gr = c(2),
#        km.sup.gr = c(10),
#        km.iter = (100),
calc.FDiv = TRUE,
calc.FRic = TRUE,
m = "max",
calc.CWM=TRUE,
print.pco=TRUE,
#                      scale.RaoQ=TRUE,
stand.FRic=TRUE
)
FD.redun <- rao.diversity(abun, traits=alltraits)
# trait correlations
#cor(alltraits)
#alltraits.pca <- prcomp(alltraits, center=TRUE, scale=TRUE, retx=TRUE)
#summary(alltraits.pca)
# hydrological gradient analysis
#hydro <- subset(hydro, gaugeID != c("138001A"))
hydro.pca <- prcomp(hydro[,3:36], retx = TRUE, center = TRUE, scale = TRUE)
hydro$hydro.pc1 <- hydro.pca$x[,1]
hydro$hydro.pc2 <- hydro.pca$x[,2]
hydro$hydro.pc3 <- hydro.pca$x[,3]
hydro$hydro.pc4 <- hydro.pca$x[,4]
hydrosites <- merge(hydro, sites, all.y=TRUE, by = c("gaugeID"))
hydrosites <- hydrosites[order(hydrosites$site),]
siteNums <- hydrosites$site
hydrosites <- cbind(hydrosites[,3:41])
hydrosites$site <- siteNums
hydrosites$FDis <- FD$FDis
hydrosites$FDiv <- FD$FDiv
hydrosites$FRic <- FD$FRic
hydrosites$FEve <- FD$FEve
hydrosites$RaoQ <- FD$RaoQ
hydrosites$FGR <- FD$FGR
hydrosites$nbsp <- FD$nbsp
hydrosites$simpson <- FD.redun$Simpson
hydrosites$FunRao <- FD.redun$FunRao
hydrosites$redun <- FD.redun$FunRedundancy
hydrosites$nbsp <- FD$nbsp
#hydrosites$richness <- richness$richness.stand.ACE
hydrosites$richness <- richness$richness.stand
hydrosites$exotics <- exotics$proportionExotic
CWM <- FD$CWM
hydrosites$SLA<- CWM$SLA
hydrosites$seed.mass <- CWM$seed.mass
hydrosites$maximum.height <- CWM$maximum.height
hydrosites$flowering.duration <- CWM$flowering.duration
hydrosites$wood.density <- CWM$wood.density
hydrosites$leaf.area <- CWM$leaf.area
#hydrosites$leaf.narrowness<- CWM$leaf.narrowness
hydrosites <- hydrosites[,-36]
hydro <- read.csv("data/hydro_1975-2008.csv", header=T)
sites <- read.csv("data/sites.csv", header=T)
climate <- read.csv("data/sites_clim_soil.csv", header=T)
hydro_to1999 <- read.csv("data/hydro_1975-1999.csv", header=TRUE)
hydro_IQQM <- read.csv("data/hydro_IQQM.csv", header=TRUE)
sites <- read.csv("data/sites.csv", header=TRUE)
landuse <- read.csv("data/landuse.csv", header=TRUE)
climate.site <- climate$site
climate <- data.frame(cbind(climate[,7:37], site = climate.site))
hydro$MDF <- NULL
#FRic.SES.stats <- read.csv("data/SESFRic_stats1.csv", header=TRUE)
#FDis.SES.stats <- read.csv("data/SESFDis_stats.csv", header=TRUE)
FDis.SES.stats <- read_csv('output/zep.stats.FDis_no_imputed.csv')
FRic.SES.stats <- read_csv('output/zep.stats.FRic_no_imputed.csv')
#FDis.SES.stats <- read_csv('output/zep.stats.FDis_some_imputed.csv')
#FRic.SES.stats <- read_csv('output/zep.stats.FRic_some_imputed.csv')
hydrosites$FDis.SES <-FDis.SES.stats$FDis.SES
hydrosites$FRic.SES <- FRic.SES.stats$FRic.SES
hydrosites2 <- hydrosites[order(hydrosites$site),] # hydrosites is created in FD.R
alldata <- merge(climate, hydrosites2, by=c("site"))
clim.pca <- prcomp(alldata[,2:20], center=TRUE, scale=TRUE)
soil.pca <- prcomp(alldata[,21:32], center=TRUE, scale=TRUE)
#hydro.pca <- prcomp(alldata[,33:65], center=TRUE, scale=TRUE)
summary(clim.pca)
summary(soil.pca)
#summary(hydro.pca)
alldata$clim.pc1 <- clim.pca$x[,1]
alldata$clim.pc2 <- clim.pca$x[,2]
alldata$soil.pc1 <- soil.pca$x[,1]
alldata$soil.pc2 <- soil.pca$x[,2]
alldata$soil.pc3 <- soil.pca$x[,3]
alldata$soil.pc4 <- soil.pca$x[,3]
alldata$site <- siteNums
alldata$FDis <- FD$FDis
alldata$FDiv <- FD$FDiv
alldata$FRic <- FD$FRic
alldata$FEve <- FD$FEve
alldata$RaoQ <- FD$RaoQ
alldata$FGR <- FD$FGR
alldata$nbsp <- FD$nbsp
alldata$simpson <- FD.redun$Simpson
alldata$FunRao <- FD.redun$FunRao
alldata$redun <- FD.redun$FunRedundancy
alldata$nbsp <- FD$nbsp
#alldata$richness <- richness$richness.stand.ACE
alldata$richness.stand <- richness$richness.stand
alldata$richness.stand.ln <- richness$richness.stand.ln
alldata$richness.stand.chao <- richness$richness.stand.chao
alldata$richness.chao <- rich.estimated$chao
alldata$richness.ACE <- rich.estimated$ACE
alldata$exotics <- exotics$proportionExotic
alldata$exoticRich.ln <- richness$exoticRich.ln
alldata$gaugeID <- sites$gaugeID
alldata$SLA<- CWM$SLA
alldata$seed.mass <- CWM$seed.mass
alldata$maximum.height <- CWM$maximum.height
alldata$flowering.duration <- CWM$flowering.duration
alldata$wood.density <- CWM$wood.density
alldata$leaf.area <- CWM$leaf.area
# calculate hydrological change metrics #
# remove Teviot @ Croftby and Burnett at U/S Maroon Dam, as neither have IQQM correlates
hydro_to1999a <- hydro_to1999[-16,]
hydro_to1999a <- hydro_to1999a[-15,]
#hydro_IQQMa <- hydro_IQQM[-17,]
#hydro_IQQMa <- hydro_IQQM[-15,]
hydro_to1999a <- hydro_to1999a[order(hydro_to1999a$gaugeID),]
hydro_IQQM <- hydro_IQQM[order(hydro_IQQM$gaugeID),]
hydro_compare <- rbind(hydro_to1999a, hydro_IQQM)
hydro_compare <- hydro_compare
#hydro_compare <- hydro_compare[order(hydro_compare$gaugeID),]
#hydro_compare <- hydro_compare[1:40,]
rownames(hydro_compare) <- hydro_compare$gaugeName
hydro_compare <- hydro_compare[,4:36]
hydro_compare.dis <- vegdist(hydro_compare, method="gower")
#hydro_compare.dis <- daisy(hydro_compare, metric="manhattan", stand=TRUE)
#View(as.matrix(hydro_compare.dis))
#write.csv(as.matrix(hydro_compare.dis), file="output/gower.csv")
# find percent change from IQQM for each metric
#hydro_to1999a[17,"MDFAnnZer"] <- 0.01 # incrementing zero, otherwise inf's are produced
#hydro_to1999a[20,"MDFAnnZer"] <- 0.01
hydro_change <- compare.hydro(hydro_to1999a[,4:36],hydro_IQQM[,4:36])
#hydro_change[1,"MDFAnnZer"] <- 0 # zero divided by zero
hydro_change$MDFAnnZer <- NULL # too complicated to try and work out what percent changes from zero should be
# merge with alldata
hydro_change$gaugeID <- hydro_to1999a$gaugeID
hydro_change <- merge(hydro_change, sites, by = "gaugeID")
hydro_change <- hydro_change[order(hydro_change$site),]
hydro_change <- hydro_change[,2:34]
alldata1 <- merge(alldata, hydro_change, by="site", all.x = TRUE, fill="NA")
hydrochange.pca <- prcomp(hydro_change[,1:32], center=TRUE, scale=TRUE, retx=TRUE)
#    hydro_change1 <- hydro_change
#    hydro_change1$regulation <- alldata1.naomit$regulation
#    getAllStats(hydro_change1, hydro_change1$regulation, FD)
#    rm(hydro_change1)
# add in landuse data
alldata1 <- merge(alldata1, landuse, by="site", all.x = TRUE, fill="NA")
alldata1$richness.stand <- alldata$richness.stand
alldata1$FRic.SES <- hydrosites$FRic.SES
alldata1$FDis.SES <- hydrosites$FDis.SES
alldata1.naomit <- na.omit(alldata1)
#   getAllStats(alldata1.naomit, alldata1.naomit$FDis.SES, FD)
#   getAllStats(alldata1.naomit, alldata1.naomit$FRic.SES, FD)
#   getAllStats(alldata1.naomit, alldata1.naomit$FEve.SES, FD)
#  getAllStats(alldata1.naomit, alldata1.naomit$FDiv.SES, FD)
write.csv(alldata1.naomit, "output/alldata1naomity.csv")
alldata_reduced$FRic.SES <- alldata1.naomit$FRic.SES
alldata_reduced$FDis.SES <- alldata1.naomit$FDis.SES
write.csv(alldata_reduced, "data/alldata_reduced_noimp.csv")
View(alldata1.naomit)
head(alldata1.naomit)
alldata_reduced <- alldata1.naomit
alldata_reduced$FRic.SES <- alldata1.naomit$FRic.SES
alldata_reduced$FDis.SES <- alldata1.naomit$FDis.SES
write.csv(alldata_reduced, "data/alldata_reduced_noimp.csv")
View(alldata_reduced)
getStats(alldata_reduced$FDis.SES)
getAllStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
getStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
df <- alldata_reduced
var <- alldata_reduced$FDis.SES
trait <- FD
statsDir <- "C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD/output/stats"
dir.create(statsDir, recursive=TRUE, showWarnings=FALSE)
# output stats for each metric to dataframe
y <- data.frame()
for(i in 1:ncol(df)) {
hydro <- df[[i]]
hydroname <- as.expression(colnames(df[i]))
fit.linear <- lm(var ~ hydro, data = df)
fit.quad <- lm(var ~ hydro + I(hydro^2), data = df)
r2.linear <- signif(summary(fit.linear)$r.squared, 5)
pval.linear <- anova(fit.linear)[1,"Pr(>F)"]
r2.quad <- signif(summary(fit.quad)$r.squared, 5)
quad.summ <- summary(fit.quad)
pval.quad <- pf(quad.summ$fstatistic[1], quad.summ$fstatistic[2], quad.summ$fstatistic[3],lower.tail = FALSE)
x <- cbind(pval.linear, r2.linear, pval.quad, r2.quad)
x <- as.data.frame(x)
x <- cbind(as.character(hydroname), x)
colnames(x) <- c("metric", "pval.linear", "r2.linear", "pval.quad", "r2.quad")
if (pval.quad < 0.05) {
y <- rbind(x,y)
}
}
for(i in 1:ncol(df)) {
hydro <- df[[i]]
hydroname <- as.expression(colnames(df[i]))
fit.linear <- lm(var ~ hydro, data = df)
fit.quad <- lm(var ~ hydro + I(hydro^2), data = df)
r2.linear <- signif(summary(fit.linear)$r.squared, 5)
pval.linear <- anova(fit.linear)[1,"Pr(>F)"]
r2.quad <- signif(summary(fit.quad)$r.squared, 5)
quad.summ <- summary(fit.quad)
pval.quad <- pf(quad.summ$fstatistic[1], quad.summ$fstatistic[2], quad.summ$fstatistic[3],lower.tail = FALSE)
x <- cbind(pval.linear, r2.linear, pval.quad, r2.quad)
x <- as.data.frame(x)
x <- cbind(as.character(hydroname), x)
colnames(x) <- c("metric", "pval.linear", "r2.linear", "pval.quad", "r2.quad")
if (pval.quad < 0.05) {
y <- rbind(x,y)
browser()
}
}
alldata_reduced$gaugeID
alldata_reduced$gaugeID  <-   as.character(alldata_reduced$gaugeID)
getStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
alldata_reduced$gaugeID  <-  NULL
getStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
write.csv(alldata_reduced, "data/alldata_reduced_noimp.csv")
getAllStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
getStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
getAllStats(alldata_reduced, alldata_reduced$FDis.SES, FD)
getAllStats(alldata_reduced, alldata_reduced$FRic.SES, FD)
