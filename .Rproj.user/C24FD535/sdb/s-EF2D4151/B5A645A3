{
    "contents" : "source(\"scripts/functions.R\")\n\nlibrary(plyr)\nlibrary(reshape2)\n\ntraits <- read.csv(\"data/traits/RF_trait_data2j.csv\", header=T)\n\nlevels(traits$Taxon) <- capitalise(levels(traits$Taxon)) # make sure spp names are properly capitalised\n\n####### CLEAN SLA AND LMA DATA #######\n\n\n  # traits <- subset(traits, source != \"AUSTRAITS_dataset_52\") # 52 is TRY data. activate this line to remove.\n\n  # trim white spaces in units\n  \n  traits$SLA.units <- trim(traits$SLA.units)\n  traits$LMA.units <- trim(traits$LMA.units)\n  \n  # convert SLA units \n  \n  traits.SLA <- units.SLA(traits)\n#traits.SLA <- traits\n  \n  #hist(subset(traits.SLA, SLA.units == \"cm2/g\")$SLA) \n  #hist(subset(traits.SLA, SLA.units == \"m2/kg\")$SLA)  # reference - distribution should centre around 10\n  \n  # convert LMA units\n  \n  traits.SLA <- units.LMA(traits.SLA)\n  traits.SLA$SLAfromLMA <- as.numeric(traits.SLA$SLAfromLMA)\n  \n  # combine native SLA with LMA-derived SLA\n  \n  traits.SLA <- data.frame(cbind(traits.SLA[\"Taxon\"], \n                              traits.SLA[\"SLA\"], \n                              traits.SLA[\"SLAfromLMA\"], \n                              traits.SLA[\"source\"]))\n  traits.SLA <- SLA_LMA.combine(traits.SLA)\n  \n  # remove duplicate entries of SLA\n  \n  traits.SLA <- na.omit(traits.SLA[!duplicated(traits.SLA[,c(\"Taxon\",\"SLA\")]),][,-3])\n  traits.SLA <- traits.SLA[order(traits.SLA$Taxon),]\n  \n  # summarise intraspecies variation in SLA\n  \n  traits.SLA.CV <- ddply(traits.SLA, \n                         .(Taxon), \n                         summarise, \n                           CV = CV(SLA),\n                           sd = sd(SLA),\n                           mean = mean(SLA),\n                           count = length(SLA))\n  \n  # find species with CV of > 0.3 for SLA\n  \n  dodgy.SLA <- traits.SLA[traits.SLA$Taxon %in% as.character(subset(traits.SLA.CV, CV > 0.3)$Taxon), ]\n  dodgy.SLA <- dodgy.SLA[order(dodgy.SLA$Taxon), ]\n  \n  # output\n  \n  write.csv(traits.SLA, \"output/traits_SLA.csv\")\n  write.csv(dodgy.SLA, \"output/dodgy_SLA.csv\")\n  \n  traits.SLA$Taxon <- as.character(traits.SLA$Taxon)\n  traits.SLA$Taxon <- as.factor(traits.SLA$Taxon)\n\n  # identify SLA records only available in the TRY database (52, see top of section)\n\n  # withTRY.SLA <- traits.SLA # run with this line, including TRY above\n  # sansTRY.SLA <- traits.SLA # run with this line, excluding TRY above\n  \n  # sansTRY.SLA.records <- withTRY[!withTRY.SLA$SLA %in% sansTRY.SLA$SLA,] \n  # sansTRY.SLAspecies <- withTRY[!withTRY.SLA$Taxon %in% sansTRY.SLA$Taxon,] \n\n  # results are: 17 unique records and 1 unique species (Macadamia tetraphylla)\n\n####### CLEAN LEAF AREA DATA ######\n\n  # remove duplicate entries of leaf area\n  \n  traits.leafarea <- cbind(traits[\"Taxon\"],traits[\"leaf.area\"],traits[\"source\"])\n                                                \n  \n  traits.leafarea <- na.omit(traits.leafarea[!duplicated(traits.leafarea[,c(\"Taxon\",\"leaf.area\")]),])\n  traits.leafarea <- traits.leafarea[order(traits.leafarea$Taxon),]\n  \n  # summarise intraspecies variation in leaf area\n  \n  traits.leafarea.CV <- ddply(traits.leafarea, \n                              .(Taxon), \n                              summarise, \n                              CV = CV(leaf.area),\n                              sd = sd(leaf.area),\n                              mean = mean(leaf.area),\n                              median = median(leaf.area),\n                              count = length(leaf.area))\n  \n  # find species with CV of > 0.3 for leaf area\n  \n  dodgy.leafarea <- traits.leafarea[traits.leafarea$Taxon %in% as.character(subset(traits.leafarea.CV, CV > 0.5)$Taxon), ]\n  dodgy.leafarea <- dodgy.leafarea[order(dodgy.leafarea$Taxon), ]\n  \n  \n  # output\n  \n  write.csv(traits.leafarea, \"output/traits_leafarea.csv\")\n  write.csv(dodgy.leafarea, \"output/dodgy_leafarea.csv\")\n\ntraits.leafarea$Taxon <- as.character(traits.leafarea$Taxon)\ntraits.leafarea$Taxon <- as.factor(traits.leafarea$Taxon)\n\n# identify SLA records only available in the TRY database (52, see top of section)\n\n####### CLEAN WOOD DENSITY DATA ######\n\n  traits.WD <- units.WD(traits)\n  \n  traits.WD <- cbind(traits.WD[\"Taxon\"],traits.WD[\"wood.density\"],traits.WD[\"source\"])\n  \n  \n  traits.WD <- na.omit(traits.WD[!duplicated(traits.WD[,c(\"Taxon\",\"wood.density\")]),])\n  traits.WD <- traits.WD[order(traits.WD$Taxon),]\n  \n  # summarise intraspecies variation in wood density\n  \n  traits.WD.CV <- ddply(traits.WD, \n                        .(Taxon), \n                        summarise, \n                        CV = CV(wood.density),\n                        sd = sd(wood.density),\n                        mean = mean(wood.density),\n                        median = median(wood.density),\n                        count = length(wood.density))\n  \n  # find species with CV of > 0.3 for wood density\n  \n  dodgy.wood.density <- traits.WD[traits.WD$Taxon %in% as.character(subset(traits.WD.CV, CV > 0.2)$Taxon), ]\n  dodgy.wood.density <- dodgy.wood.density[order(dodgy.wood.density$Taxon), ]\n  \n  write.csv(traits.WD, \"output/traits_wooddensity.csv\")\n  write.csv(dodgy.wood.density, \"output/dodgy_wooddensity.csv\")\n\ntraits.WD$Taxon <- as.character(traits.WD$Taxon)\ntraits.WD$Taxon <- as.factor(traits.WD$Taxon)\n  \n  # identify WD records only available in the TRY database (52, see top of section)\n\n####### CLEAN MAXIMUM HEIGHT DATA #######\n\n  # find maxheight record with the greatest value for each species\n\n  traits.maxheight <- as.data.frame(cbind(traits[\"Taxon\"], \n                                                traits[\"maximum.height\"], \n                                                traits[\"source\"]))\n  \n  traits.maxheight <- ddply(traits.maxheight, .(Taxon), function(x) x[which.max(x$maximum.height),])\n                                                                                            \n  # vine maxheight is suspect; list of vines can be found in vines.csv\n  \n  vines <- read.csv(\"data/traits/vines.csv\", header=T)\n  \n  traits.maxheight.vines <- traits.maxheight[traits.maxheight$Taxon %in% vines$Taxon, ]\n  \n  write.csv(traits.maxheight.vines, \"output/maxheight_vines.csv\")\n\n  # remove vine data from maxheight\n\n  #traits.maxheight_sansvines <- merge(traits.maxheight, vines, all.x = TRUE)\n  #traits.maxheight_sansvines <- subset(traits.maxheight_sansvines, is.na(vine))\n\n # write.csv(traits.maxheight_sansvines, \"output/traits_maxheight.csv\")\n\ntraits.maxheight$Taxon <- as.character(traits.maxheight$Taxon)\ntraits.maxheight$Taxon <- as.factor(traits.maxheight$Taxon)\n\n####### CLEAN SEED MASS DATA #######\n\n  traits.seedmass <- cbind(traits[\"Taxon\"],traits[\"seed.mass\"],traits[\"source\"])\n  \n  traits.seedmass <- na.omit(traits.seedmass[!duplicated(traits.seedmass[,c(\"Taxon\",\"seed.mass\")]),])\n  traits.seedmass <- traits.seedmass[order(traits.seedmass$Taxon),]\n  \n\n\n####### IMPUTE SEED MASSES FROM SEED VOLUME AND MERGE WITH SEEDMASS DATA #######\n  \n    # find relationship between seed mass and seed volume\n    \n    seedmass_volume <- read.csv(\"data/traits/seedmass_volume.csv\", header=T)\n    \n    plot(log10(seedmass_volume$seed.volume), log10(seedmass_volume$mean.seed.mass))\n    \n    seedmass_volume.lm <- lm(log10(mean.seed.mass) ~ log10(seed.volume), data = seedmass_volume)\n    \n    \n    # use known relationship between seed mass and volume to impute seed mass where only volume is known\n    \n    traits.seedvol <- subset(traits, seed.volume != \"NA\")\n    traits.seedvol <- cbind(traits.seedvol[\"Taxon\"],\n                            traits.seedvol[\"seed.volume\"],\n                            traits.seedvol[\"source\"])\n    \n    traits.seedvol <- na.omit(traits.seedvol[!duplicated(traits.seedvol[,c(\"Taxon\",\"seed.volume\")]),])\n    traits.seedvol <- traits.seedvol[order(traits.seedvol$Taxon),]\n    \n    traits.seedvol$seedmass.predicted <- predict.lm(seedmass_volume.lm, traits.seedvol)\n    traits.seedvol$seedmass.predicted  <- 10^traits.seedvol$seedmass.predicted \n       \n  # merge predicted values in with duplicate-screened seedmass data\n\n  traits.seedvol1 <- cbind(traits.seedvol[\"Taxon\"], \n                           traits.seedvol[\"seedmass.predicted\"],\n                           traits.seedvol[\"source\"])\n  colnames(traits.seedvol1)[2] <- c(\"seed.mass\")\n\n  traits.seedmass <- rbind(traits.seedvol1, traits.seedmass)\n\n  # summarise intraspecies variation in seed mass\n\n  traits.seedmass.CV <- ddply(traits.seedmass, \n                              .(Taxon), \n                              summarise, \n                              CV = CV(seed.mass),\n                              sd = sd(seed.mass),\n                              mean = mean(seed.mass),\n                              median = median(seed.mass),\n                              count = length(seed.mass))\n  \n  # find species with CV of > 0.3 for seed mass\n  \n  dodgy.seed.mass <- traits.seedmass[traits.seedmass$Taxon %in% as.character(subset(traits.seedmass.CV, CV > 0.5)$Taxon), ]\n  dodgy.seed.mass <- dodgy.seed.mass[order(dodgy.seed.mass$Taxon), ]\n  \n  write.csv(traits.seedmass, \"output/traits_seedmass.csv\")\n  write.csv(dodgy.seed.mass, \"output/dodgy_seedmass.csv\") \n  \n        # AUSTRAITS_DATABASE49 seems to be responsible for a lot of records that are out by a factor of 10.\n        # not all of the values from 49 are out of whack though, so bulk multiplication is not possible\n\ntraits.seedmass$Taxon <- as.character(traits.seedmass$Taxon)\ntraits.seedmass$Taxon <- as.factor(traits.seedmass$Taxon)\n\n####### CLEAN FLOWERING TIME DATA #######\n\n# flowering times have been reworked manually. will need to add more data from flora later.\n\ntraits.flowering.duration <- as.data.frame(cbind(traits[\"Taxon\"], \n                                        traits[\"flowering.duration\"], \n                                        traits[\"source\"]))\ntraits.flowering.duration <- na.omit(traits.flowering.duration)\n\nlength(unique(traits.flowering.duration$Taxon))\n\ntraits.flowering.duration$Taxon <- as.character(traits.flowering.duration$Taxon)\ntraits.flowering.duration$Taxon <- as.factor(traits.flowering.duration$Taxon)\n\nwrite.csv(traits.flowering.duration, \"output/traits_floweringduration.csv\")\n\n####### CALCULATE LEAF NARROWNESS #######\n\ntraits.leaf.narrowness <- as.data.frame(cbind(traits[\"Taxon\"], \n                                             traits[\"leaf.length\"], \n                                             traits[\"leaf.width\"],\n                                             traits[\"source\"]))\ntraits.leaf.narrowness <- na.omit(traits.leaf.narrowness)\ntraits.leaf.narrowness$leaf.narrowness <- traits.leaf.narrowness$leaf.length / traits.leaf.narrowness$leaf.width\n\ntraits.leaf.narrowness$Taxon <- as.character(traits.leaf.narrowness$Taxon)\ntraits.leaf.narrowness$Taxon <- as.factor(traits.leaf.narrowness$Taxon)\n\n####### COMBINE TRAIT AVERAGES #######\n\n  # find average trait values\n\n  traits.SLA_avg <- ddply(traits.SLA, .(Taxon), summarise, avg = mean(SLA), CV = CV(SLA), n = length(SLA))\n  traits.leafarea_avg <- ddply(traits.leafarea, .(Taxon), summarise, avg = mean(leaf.area), CV = CV(leaf.area), n = length(leaf.area))\n  traits.WD_avg <- ddply(traits.WD, .(Taxon), summarise, avg = mean(wood.density), CV = CV(wood.density), n = length(wood.density))\n#  traits.maxheight_avg <- ddply(traits.maxheight_sansvines, .(Taxon), summarise, avg = mean(maximum.height), CV = CV(maximum.height), n = length(maximum.height))\n  traits.maxheight_avg <- ddply(traits.maxheight, .(Taxon), summarise, avg = mean(maximum.height), CV = CV(maximum.height), n = length(maximum.height))\n  traits.seedmass_avg <- ddply(traits.seedmass, .(Taxon), summarise, avg = mean(seed.mass), CV = CV(seed.mass), n = length(seed.mass))\n  traits.flowering.duration_avg <- ddply(traits.flowering.duration, .(Taxon), summarise, avg = mean(flowering.duration), CV = CV(flowering.duration), n = length(flowering.duration))\n#traits.leaf.narrowness_avg <- ddply(traits.leaf.narrowness, .(Taxon), summarise, avg = mean(leaf.narrowness), CV = CV(leaf.narrowness), n = length(leaf.narrowness))\n\n  traits.SLA_avg$trait <- c(\"SLA\")\n  traits.leafarea_avg$trait <- c(\"leaf.area\")\n  traits.WD_avg$trait <- c(\"wood.density\")\n  traits.maxheight_avg$trait <- c(\"maximum.height\")\n  traits.seedmass_avg$trait <- c(\"seed.mass\")\n  traits.flowering.duration_avg$trait <- c(\"flowering.duration\")\n#  traits.leaf.narrowness_avg$trait <- c(\"leaf.narrowness\")\n\n  # combine and transform from long to wide format\n\n  alltraits <- rbind(traits.SLA_avg, \n                     traits.leafarea_avg,\n                     traits.WD_avg,\n                     traits.maxheight_avg,\n                     traits.seedmass_avg,\n                     traits.flowering.duration_avg)\n#                     traits.leaf.narrowness_avg)\n\n  #alltraits$Taxon <- as.character(alltraits$Taxon)\n  #alltraits$Taxon <- as.factor(alltraits$Taxon)\n\n  alltraits <- dcast(alltraits, Taxon ~ trait, value.var = \"avg\", fill=\"NA\")\n\n  # fix some type and formatting issues\n\n  alltraits$SLA <- as.numeric(alltraits$SLA)\n  alltraits$leaf.area <- as.numeric(alltraits$leaf.area)\n  alltraits$wood.density <- as.numeric(alltraits$wood.density)\n  alltraits$maximum.height <- as.numeric(alltraits$maximum.height)\n  alltraits$seed.mass <- as.numeric(alltraits$seed.mass)\n  alltraits$flowering.duration <- as.numeric(alltraits$flowering.duration)\n#  alltraits$leaf.narrowness <- as.numeric(alltraits$leaf.narrowness)\n\n  alltraits$X <- NULL\n\n  alltraits$Taxon <- make.names(alltraits$Taxon) # replaces spaces in species names with points\n\n  #levels(alltraits$Taxon) <- capitalise(levels(alltraits$Taxon)) # make sure spp names are properly capitalised\n\n  alltraits <- alltraits[order(alltraits$Taxon),]\n\n  write.csv(alltraits, \"data/alltraits.csv\")\n \n#  rm(list = ls())\n\n\n",
    "created" : 1438822345490.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1424822358",
    "id" : "B5A645A3",
    "lastKnownWriteTime" : 1433392273,
    "path" : "C:/Users/James/Desktop/stuff/data/analysis/R/SEQLD/scripts/trait_cleaning.R",
    "project_path" : "scripts/trait_cleaning.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "type" : "r_source"
}